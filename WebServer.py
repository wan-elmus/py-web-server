
#import socket module
from socket import *
import sys # In order to terminate the program
import signal

# Define a signal handler function
def signal_handler(sig, frame):
    print('Exiting program...')
    serverSocket.close()
    sys.exit(0)

# Set the signal handler for the SIGINT signal (generated by Ctrl + C)
signal.signal(signal.SIGINT, signal_handler)

# Create the socket and start listening for connections
serverSocket = socket(AF_INET, SOCK_STREAM)
HOST = ''
PORT = 8080

# Import the socket module
import socket

# Get the hostname and IP address of the local machine
hostname = socket.gethostname()
ip_address = socket.gethostbyname(hostname)

# Print the IP address and port number of the server
print("IP address:", ip_address)
print("Port number:", PORT)

# Bind the server socket to the IP address and port number
serverSocket.bind((ip_address, PORT))

serverSocket.listen(1)

while True:
    #Establish the connection
    print('Ready to serve...')
    connectionSocket, addr = serverSocket.accept()
    try:
        message = connectionSocket.recv(1024).decode()
        filename = message.split()[1]

        #Open the requested file
        f = open(filename[1:])

        #Read the content of the file and generate an HTTP response message
        outputdata = f.read()
        response = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n" + outputdata

        #Send the HTTP response header and file content to the client
        connectionSocket.send(response.encode())

        #Close the client socket
        connectionSocket.close()

    except IOError:
        #Send response message for file not found
        response = "HTTP/1.1 404 Not Found\r\nContent-Type: text/html\r\n\r\n"
        connectionSocket.send(response.encode())

        #Close the client socket
        connectionSocket.close()

serverSocket.close()
sys.exit() #Terminate the program after sending the corresponding data